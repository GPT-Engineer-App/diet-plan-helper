<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Diet Plan</title>
    <style>
      body {
        font-family: Arial, sans-serif;
      }
      .filter-container {
        margin-bottom: 20px;
      }
      .filter-container label {
        margin-right: 10px;
      }
      .diet-plan table {
        border-collapse: collapse;
        width: 100%;
      }
      .diet-plan th,
      .diet-plan td {
        border: 1px solid #ddd;
        padding: 8px;
      }
      .diet-plan th {
        background-color: #f2f2f2;
      }
      .reset-button {
        margin-top: 10px;
        color: white;
        background-color: red;
        border: none;
        padding: 10px;
        cursor: pointer;
      }
      .report-container {
        margin-top: 20px;
      }
    </style>
  </head>
  <body>
    <h1>Diet Plan</h1>

    <div class="filter-container">
      <label for="protein">Protein (g):</label>
      <input type="number" id="protein" name="protein" />
      <label for="fat">Fat (g):</label>
      <input type="number" id="fat" name="fat" />
      <label for="calories">Calories:</label>
      <input type="number" id="calories" name="calories" />
      <label for="carbs">Carbohydrates (g):</label>
      <input type="number" id="carbs" name="carbs" />
      <label for="veg">Veg/Non-Veg:</label>
      <select id="veg" name="veg">
        <option value="">Any</option>
        <option value="Veg">Veg</option>
        <option value="Non-Veg">Non-Veg</option>
      </select>
      <label for="disease">Suitable for Diseases:</label>
      <select id="disease" name="disease">
        <option value="">Any</option>
        <option value="Diabetes">Diabetes</option>
        <option value="Hypertension">Hypertension</option>
      </select>
      <label for="region">Region of Origin:</label>
      <select id="region" name="region">
        <option value="">Any</option>
        <option value="North">North</option>
        <option value="South">South</option>
        <option value="East">East</option>
        <option value="West">West</option>
      </select>
      <button onclick="filterDietPlan()">Filter</button>
      <button class="reset-button" onclick="resetFilters()">Reset</button>
    </div>

    <div class="diet-plan">
      <table>
        <thead>
          <tr>
            <th>Select</th>
            <th>Dish Name</th>
            <th>Veg/Non-Veg</th>
            <th>Protein (g)</th>
            <th>Carbohydrates (g)</th>
            <th>Calories</th>
            <th>Fat (g)</th>
            <th>Region of Origin</th>
            <th>Quantity</th>
            <th>Suitable for Diseases</th>
          </tr>
        </thead>
        <tbody id="diet-plan-body">
          <!-- Rows will be populated by JavaScript -->
        </tbody>
      </table>
    </div>

    <div class="report-container">
      <h2>After Wake Up</h2>
      <div id="selected-dishes-report"></div>
    </div>

    <div class="report-container">
      <h2>Breakfast</h2>
      <div id="selected-dishes-report-breakfast"></div>
    </div>

    <div class="report-container">
      <h2>Before Lunch</h2>
      <div id="selected-dishes-report-before-lunch"></div>
    </div>

    <div class="report-container">
      <h2>Lunch</h2>
      <div id="selected-dishes-report-lunch"></div>
    </div>

    <div class="report-container">
      <h2>Afternoon Snacks</h2>
      <div id="selected-dishes-report-afternoon-snacks"></div>
    </div>

    <div class="report-container">
      <h2>Before Dinner</h2>
      <div id="selected-dishes-report-before-dinner"></div>
    </div>

    <div class="report-container">
      <h2>Dinner</h2>
      <div id="selected-dishes-report-dinner"></div>
    </div>

    <div class="report-container">
      <h2>After Dinner</h2>
      <div id="selected-dishes-report-after-dinner"></div>
    </div>

    <div class="report-container">
      <h2>Notes</h2>
      <textarea id="notes" rows="4" cols="50"></textarea>
    </div>

    <button onclick="combineReports()">Combine Reports</button>
    <button onclick="printCombinedReport()">Print Combined Report</button>
    <button onclick="downloadPDF()">Download as PDF</button>

    <script>
      const dietData = [
        { name: "Oatmeal", veg: "Veg", protein: 5, carbs: 27, calories: 150, fat: 3, region: "North", quantity: 1, diseases: "Diabetes" },
        { name: "Chicken Salad", veg: "Non-Veg", protein: 20, carbs: 5, calories: 200, fat: 10, region: "West", quantity: 1, diseases: "Hypertension" },
        // Add more diet data here
      ];

      function displayDietPlan(data) {
        const tbody = document.getElementById("diet-plan-body");
        tbody.innerHTML = "";
        data.forEach((item, index) => {
          const row = document.createElement("tr");
          row.innerHTML = `
                    <td><input type="checkbox" data-index="${index}" onchange="updateReport(this)"></td>
                    <td>${item.name}</td>
                    <td>${item.veg}</td>
                    <td>${item.protein}</td>
                    <td>${item.carbs}</td>
                    <td>${item.calories}</td>
                    <td>${item.fat}</td>
                    <td>${item.region}</td>
                    <td>${item.quantity}</td>
                    <td>${item.diseases}</td>
                `;
          tbody.appendChild(row);
        });
      }

      function filterDietPlan() {
        const protein = document.getElementById("protein").value;
        const fat = document.getElementById("fat").value;
        const calories = document.getElementById("calories").value;
        const carbs = document.getElementById("carbs").value;
        const veg = document.getElementById("veg").value;
        const disease = document.getElementById("disease").value;
        const region = document.getElementById("region").value;

        const filteredData = dietData.filter((item) => {
          return (!protein || item.protein >= protein) && (!fat || item.fat <= fat) && (!calories || item.calories <= calories) && (!carbs || item.carbs <= carbs) && (!veg || item.veg === veg) && (!disease || item.diseases === disease) && (!region || item.region === region);
        });

        displayDietPlan(filteredData);
      }

      function resetFilters() {
        document.getElementById("protein").value = "";
        document.getElementById("fat").value = "";
        document.getElementById("calories").value = "";
        document.getElementById("carbs").value = "";
        document.getElementById("veg").value = "";
        document.getElementById("disease").value = "";
        document.getElementById("region").value = "";
        displayDietPlan(dietData);
      }

      function updateReport(checkbox) {
        const index = checkbox.getAttribute("data-index");
        const item = dietData[index];
        const reportContainer = document.getElementById("selected-dishes-report");
        if (checkbox.checked) {
          const reportItem = document.createElement("div");
          reportItem.setAttribute("data-index", index);
          reportItem.textContent = `${item.name} - ${item.quantity}`;
          reportContainer.appendChild(reportItem);
        } else {
          const reportItems = reportContainer.querySelectorAll(`[data-index="${index}"]`);
          reportItems.forEach((item) => item.remove());
        }
      }

      function combineReports() {
        const combinedReport = document.createElement("div");
        combinedReport.innerHTML = `
                <h2>Combined Report</h2>
                <div>${document.getElementById("selected-dishes-report").innerHTML}</div>
                <div>${document.getElementById("selected-dishes-report-breakfast").innerHTML}</div>
                <div>${document.getElementById("selected-dishes-report-before-lunch").innerHTML}</div>
                <div>${document.getElementById("selected-dishes-report-lunch").innerHTML}</div>
                <div>${document.getElementById("selected-dishes-report-afternoon-snacks").innerHTML}</div>
                <div>${document.getElementById("selected-dishes-report-before-dinner").innerHTML}</div>
                <div>${document.getElementById("selected-dishes-report-dinner").innerHTML}</div>
                <div>${document.getElementById("selected-dishes-report-after-dinner").innerHTML}</div>
                <div>Notes: ${document.getElementById("notes").value}</div>
            `;
        const popup = window.open("", "_blank", "width=800,height=600");
        popup.document.write(combinedReport.outerHTML);
      }

      function printCombinedReport() {
        combineReports();
        setTimeout(() => {
          window.print();
        }, 500);
      }

      function downloadPDF() {
        combineReports();
        setTimeout(() => {
          const popup = window.open("", "_blank", "width=800,height=600");
          popup.document.execCommand("SaveAs", true, "combined_report.pdf");
        }, 500);
      }

      displayDietPlan(dietData);
    </script>
  </body>
</html>
